{"version":3,"sources":["webpack:///./src/pages/project.js"],"names":["Project","data","pageContext","projects","html","frontmatter","projectFiles","edges","map","edge","node","childMarkdownRemark","console","log","pageQuery"],"mappings":"qOAmBeA,UAdC,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,KAAyD,IAAnDC,YAEjBC,GAFoE,EAApCC,KAAoC,EAA9BC,Y,2HAA8B,2BAEzDJ,EAAKK,aAAaC,MAAMC,KACvC,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,wBAIpB,OADAC,QAAQC,IAAI,WAAYV,GAEtB,kBAAC,IAAD,OAQG,IAAMW,EAAS","file":"component---src-pages-project-js-b62dbd2a1fa86337d650.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport Layout from '../components/layout'\n// import Gallery from '../components/Gallery'\n\nconst Project = ({ data, pageContext: { html, frontmatter }, ...props }) => {\n\n  const projects = data.projectFiles.edges.map(\n    edge => edge.node.childMarkdownRemark\n  )\n  // const selectedProject = projects[selectedIndex];\n  console.log('projects', projects)\n  return (\n    <Layout>\n      {/* <div id=\"main\"><p>{selectedProject}</p></div> */}\n    </Layout>\n  )\n}\n\nexport default Project\n\nexport const pageQuery = graphql`\n  query {\n    projectFiles: allFile(\n      filter: {\n        sourceInstanceName: { eq: \"markdown\" }\n        relativeDirectory: { eq: \"projects\" }\n      }\n      sort: { fields: childMarkdownRemark___frontmatter___date, order: DESC }\n    ) {\n      edges {\n        node {\n          childMarkdownRemark {\n            id\n            frontmatter {\n              title\n              path\n              date\n              images\n            }\n            excerpt\n          }\n        }\n      }\n    }\n    allImages: allFile(filter: { sourceInstanceName: { eq: \"images\" } }) {\n      edges {\n        node {\n          name\n          id\n          relativePath\n          publicURL\n          childImageSharp {\n            fluid {\n              src\n            }\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}